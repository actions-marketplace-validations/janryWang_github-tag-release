{"version":3,"file":"shell.js","sourceRoot":"","sources":["../src/shell.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uDAAiD;AACjD,yCAAyC;AAElC,IAAM,KAAK,GAAG,UAAO,WAAmB,EAAE,IAAe;;;;;gBACxD,OAAO,GAAgB;oBAC3B,GAAG,wBACE,OAAO,CAAC,GAAG,KACd,YAAY,EAAE,uBAAW,EACzB,QAAQ,EAAE,uBAAW,GACtB;iBACF,CAAA;gBACG,MAAM,GAAG,EAAE,CAAA;gBACX,MAAM,GAAG,EAAE,CAAA;gBACf,OAAO,CAAC,SAAS,GAAG;oBAClB,MAAM,EAAE,UAAC,IAAY;wBACnB,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAA;oBAC3B,CAAC;oBACD,MAAM,EAAE,UAAC,IAAY;wBACnB,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAA;oBAC3B,CAAC;iBACF,CAAA;gBACD,qBAAM,cAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,OAAO,CAAC,EAAA;;gBAA3C,SAA2C,CAAA;gBAC3C,sBAAO;wBACL,MAAM,QAAA;wBACN,MAAM,QAAA;qBACP,EAAA;;;KACF,CAAA;AAvBY,QAAA,KAAK,SAuBjB","sourcesContent":["import exec, { ExecOptions } from '@actions/exec'\nimport { GithubToken } from './constants'\n\nexport const shell = async (commandLine: string, args?: string[]) => {\n  const options: ExecOptions = {\n    env: {\n      ...process.env,\n      GITHUB_TOKEN: GithubToken,\n      GH_TOKEN: GithubToken,\n    },\n  }\n  let stdout = ''\n  let stderr = ''\n  options.listeners = {\n    stdout: (data: Buffer) => {\n      stdout += data.toString()\n    },\n    stderr: (data: Buffer) => {\n      stderr += data.toString()\n    },\n  }\n  await exec.exec(commandLine, args, options)\n  return {\n    stdout,\n    stderr,\n  }\n}\n"]}