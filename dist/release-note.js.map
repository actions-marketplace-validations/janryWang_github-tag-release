{"version":3,"file":"release-note.js","sourceRoot":"","sources":["../src/release-note.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,0DAAkC;AAClC,0CAAyC;AACzC,6BAKc;AACd,yCAA6C;AAC7C,yCAA0C;AAE1C,IAAM,YAAY,GAAG,UAAC,GAAW;IAC/B,OAAO,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;AACtC,CAAC,CAAA;AAEM,IAAM,iBAAiB,GAAG;;;;oBACpB,qBAAM,IAAA,aAAO,GAAE,EAAA;;gBAApB,EAAE,GAAG,SAAe;gBACb,qBAAM,IAAA,oBAAc,EAAC,EAAE,CAAC,EAAA;;gBAA/B,IAAI,GAAG,SAAwB;gBACxB,qBAAM,IAAA,2BAAe,EAAC,IAAI,EAAE,EAAE,CAAC,EAAA;;gBAAtC,IAAI,GAAG,SAA+B;gBAC7B,qBAAM,IAAA,sBAAgB,GAAE,EAAA;;gBAAjC,MAAM,GAAG,SAAwB;gBACjC,KAAK,GAAG,IAAA,oBAAc,GAAE,CAAA;gBAC9B,sBAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;wBACjC,IAAA,oBAAS,wBAEF,gBAAO,CAAC,IAAI,KACf,GAAG,EAAE,IAAI,EACT,QAAQ,EAAE,EAAE,EACZ,gBAAgB,EAAE,MAAM,EACxB,IAAI,EAAK,wBAAY,WAAM,EAAI,EAC/B,IAAI,MAAA,EACJ,KAAK,EAAE,KAAK,EACZ,UAAU,EAAE,YAAY,CAAC,EAAE,CAAC,EAC5B,QAAQ,EAAE,wBAAwB,EAClC,IAAI,EAAE;gCACJ,KAAK,OAAA;6BACN,KAEH,UAAC,GAAY,EAAE,QAAiB;4BAC9B,IAAI,GAAG,EAAE;gCACP,MAAM,EAAE,CAAA;6BACT;iCAAM;gCACL,OAAO,CAAC,QAAQ,CAAC,CAAA;6BAClB;wBACH,CAAC,CACF,CAAA;oBACH,CAAC,CAAC,EAAA;;;KACH,CAAA;AA/BY,QAAA,iBAAiB,qBA+B7B","sourcesContent":["import ghRelease from 'gh-release'\nimport { context } from '@actions/github'\nimport {\n  lastTag,\n  getPreviousTag,\n  getCurrentBranch,\n  getGithubToken,\n} from './git'\nimport { createChangelog } from './changelog'\nimport { ReleaseTitle } from './constants'\n\nconst isPrerelease = (tag: string) => {\n  return /(?:beta|rc|alpha)/.test(tag)\n}\n\nexport const createReleaseNote = async () => {\n  const to = await lastTag()\n  const from = await getPreviousTag(to)\n  const body = await createChangelog(from, to)\n  const branch = await getCurrentBranch()\n  const token = getGithubToken()\n  return new Promise((resolve, reject) => {\n    ghRelease(\n      {\n        ...context.repo,\n        cli: true,\n        tag_name: to,\n        target_commitish: branch,\n        name: `${ReleaseTitle} - ${to}`,\n        body,\n        draft: false,\n        prerelease: isPrerelease(to),\n        endpoint: 'https://api.github.com',\n        auth: {\n          token,\n        },\n      },\n      (err: unknown, response: unknown) => {\n        if (err) {\n          reject()\n        } else {\n          resolve(response)\n        }\n      }\n    )\n  })\n}\n"]}